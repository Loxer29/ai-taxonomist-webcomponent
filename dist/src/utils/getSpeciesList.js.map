{"version":3,"file":"getSpeciesList.js","sourceRoot":"","sources":["../../../src/utils/getSpeciesList.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,EAAE,MAAc,EAAyD,EAAE;IAC1G,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,CAAA;IAC9C,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;QACzB,MAAM,WAAW,GAAc,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;QACpD,OAAO;YACH,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACjE,KAAK,EAAE,IAAI;SACd,CAAA;KACJ;IAED,OAAO;QACH,OAAO,EAAE,EAAE;QACX,KAAK,EAAE,gCAAgC,QAAQ,CAAC,UAAU,EAAE;KAC/D,CAAA;AACL,CAAC,CAAA","sourcesContent":["import { Species } from './types.js'\r\n\r\nexport const getSpeciesList = async (apiUrl: string): Promise<{ species: Species[]; error: string | null }> => {\r\n    const response = await fetch(`${apiUrl}/taxa`)\r\n    if (response.status === 200) {\r\n        const speciesList: Species[] = await response.json()\r\n        return {\r\n            species: speciesList.sort((a, b) => a.name.localeCompare(b.name)),\r\n            error: null,\r\n        }\r\n    }\r\n\r\n    return {\r\n        species: [],\r\n        error: `Failed to load species list: ${response.statusText}`,\r\n    }\r\n}\r\n"]}