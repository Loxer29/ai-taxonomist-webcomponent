{"version":3,"file":"SpeciesList.js","sourceRoot":"","sources":["../../../src/components/SpeciesList.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, css, LitElement } from 'lit'\r\nimport { property } from 'lit/decorators.js'\r\nimport { Species } from '../utils/types.js'\r\nimport './ai-loader.js'\r\nimport { getSpeciesList } from '../utils/getSpeciesList.js'\r\n\r\nexport class SpeciesList extends LitElement {\r\n    static styles = css`\r\n        ai-loader {\r\n            display: flex;\r\n            justify-content: center;\r\n        }\r\n\r\n        input {\r\n            border: none;\r\n            background-color: var(--ai-taxonomist-separator-border-color);\r\n            padding: 10px 12px;\r\n            margin: 12px 0;\r\n            color: var(--ai-taxonomist-text-color);\r\n            width: 100%;\r\n            box-sizing: border-box;\r\n            border-radius: 4px;\r\n        }\r\n\r\n        ul {\r\n            list-style: none;\r\n            padding: 0;\r\n            margin: 0;\r\n            flex: 1;\r\n            display: flex;\r\n            flex-direction: column;\r\n        }\r\n\r\n        a {\r\n            margin-top: 12px;\r\n            color: var(--ai-taxonomist-accent-color);\r\n            margin: 12px 0;\r\n            display: block;\r\n            border-left: 0 solid transparent;\r\n            text-decoration: none;\r\n            transition: all 0.3s;\r\n            border-radius: 4px;\r\n        }\r\n\r\n        a:hover {\r\n            filter: brightness(80%);\r\n            padding-left: 0.5rem;\r\n            border-left: 5px solid var(--ai-taxonomist-accent-color);\r\n            border-color: var(--ai-taxonomist-accent-color);\r\n            z-index: 10;\r\n        }\r\n\r\n        .result .bottom {\r\n            margin: 0;\r\n            display: flex;\r\n            align-items: center;\r\n            color: var(--ai-taxonomist-text-color);\r\n        }\r\n        .speciesName {\r\n            margin: 0;\r\n            font-style: italic;\r\n        }\r\n        .speciesName span {\r\n            font-style: normal;\r\n        }\r\n        .family {\r\n            text-align: left;\r\n            font-style: italic;\r\n            background-color: var(--ai-taxonomist-separator-border-color);\r\n            color: var(--ai-taxonomist-text-color);\r\n            border-radius: 4px;\r\n            margin-right: 12px;\r\n            padding: 0.2rem 0.35rem;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            display: block;\r\n        }\r\n    `\r\n\r\n    @property({ type: String }) apiUrl: string | null = null\r\n\r\n    @property({ attribute: false }) species: Species[] = []\r\n\r\n    @property({ attribute: false }) displayedSpecies: Species[] = []\r\n\r\n    @property({ attribute: false }) filter: string | null = null\r\n\r\n    @property({ attribute: false }) error: String | null = null\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback()\r\n        ;(async () => {\r\n            if (this.apiUrl) {\r\n                const { species, error } = await getSpeciesList(this.apiUrl)\r\n                this.displayedSpecies = species\r\n                this.species = species\r\n                this.error = error\r\n            }\r\n        })()\r\n    }\r\n\r\n    __onSearch(event: any) {\r\n        const filterFields = ['name', 'family', 'authorship', 'genus', 'vernacularName']\r\n        this.filter = (event?.currentTarget?.value || '').trim()\r\n\r\n        if (this.filter?.length) {\r\n            const filterValue = this.filter.toLowerCase()\r\n            this.displayedSpecies = this.species.filter((el: Species) => {\r\n                for (const field of filterFields) {\r\n                    // @ts-ignore\r\n                    if (el[field].trim().toLowerCase().includes(filterValue)) {\r\n                        return true\r\n                    }\r\n                }\r\n                return false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.error) {\r\n            return html`<p><b>${this.error || 'Unknown error'}</b></p>`\r\n        }\r\n        if (!this.displayedSpecies.length && !this.filter) {\r\n            return html` <ai-loader></ai-loader>`\r\n        }\r\n        return html` <p>\r\n                <b>${this.species.length}</b> species${this.species.length !== this.displayedSpecies.length\r\n                    ? html` (${this.displayedSpecies.length} displayed)`\r\n                    : html`.`}\r\n            </p>\r\n            <input\r\n                type=\"text\"\r\n                id=\"search\"\r\n                placeholder=\"Search (species | family | genus | author | name)\"\r\n                @change=${this.__onSearch}\r\n                @keyup=${this.__onSearch}\r\n            />\r\n            <ul>\r\n                ${this.displayedSpecies.map(\r\n                    species => html`\r\n                        <li class=\"result\">\r\n                            <a\r\n                                href=\"https://www.gbif.org/species/${species.species_id}\"\r\n                                title=\"Open on GBIF.org\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                ${species.name\r\n                                    ? html`<p class=\"speciesName\">\r\n                                          ${species.name}<span> ${species.authorship}</span>\r\n                                      </p>`\r\n                                    : ''}\r\n                                <p class=\"bottom\">\r\n                                    <span class=\"family\" title=\"family\"> ${species.family}</span>\r\n                                    ${species.vernacularName}\r\n                                </p>\r\n                            </a>\r\n                        </li>\r\n                    `\r\n                )}\r\n            </ul>`\r\n    }\r\n}\r\n"]}