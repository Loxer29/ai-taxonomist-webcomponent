{"version":3,"file":"TaxonResults.js","sourceRoot":"","sources":["../../src/TaxonResults.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, LitElement } from 'lit'\r\nimport { property } from 'lit/decorators.js'\r\nimport { round } from './utils/round.js'\r\nimport './components/ai-loader.js'\r\nimport { GBIF_LOGO } from './utils/icons.js'\r\nimport { Results, ResultType } from './utils/types.js'\r\n\r\nconst getDomainName = (url: string) => {\r\n    const domain = url.split('/')[2]\r\n    return domain.replace('www.', '')\r\n}\r\n\r\nexport class TaxonResults extends LitElement {\r\n    static styles = css`\r\n        .container {\r\n            display: flex;\r\n            flex-direction: column;\r\n            animation: fadeIn 0.5s ease-in-out;\r\n        }\r\n\r\n        .separatorContainer {\r\n            display: flex;\r\n            align-items: center;\r\n        }\r\n\r\n        plantnet-brand {\r\n            margin-top: -4px;\r\n        }\r\n\r\n        .title {\r\n            flex: 1;\r\n            font-weight: normal;\r\n            display: block;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            margin-top: 12px;\r\n        }\r\n\r\n        .title > span {\r\n            position: relative;\r\n            display: inline-block;\r\n            margin-left: calc(16.6667% + 0.2rem);\r\n        }\r\n\r\n        .title > span:before,\r\n        .title > span:after {\r\n            content: '';\r\n            position: absolute;\r\n            top: 50%;\r\n            width: 9999px;\r\n            height: 1.5px;\r\n            background: var(--ai-taxonomist-separator-border-color);\r\n        }\r\n\r\n        .title > span:before {\r\n            right: 100%;\r\n            margin-right: 10px;\r\n        }\r\n\r\n        .title > span:after {\r\n            left: 100%;\r\n            margin-left: 10px;\r\n        }\r\n\r\n        ai-loader {\r\n            margin-left: calc(16.6667%);\r\n        }\r\n\r\n        ul {\r\n            list-style: none;\r\n            padding: 0;\r\n            margin: 0;\r\n            flex: 1;\r\n            display: flex;\r\n            flex-direction: column;\r\n        }\r\n\r\n        .result {\r\n            box-sizing: border-box;\r\n            display: flex;\r\n            flex: 1 1 auto;\r\n            flex-direction: row;\r\n            flex-wrap: wrap;\r\n            margin-right: -0.5rem;\r\n            margin-left: -0.5rem;\r\n            opacity: 0;\r\n            transform: translateY(-20px);\r\n            animation: animateIn 0.3s forwards;\r\n            animation-timing-function: cubic-bezier(0.33, 1, 0.68, 1);\r\n            transition: border-color 0.3s;\r\n            border-radius: 4px;\r\n            border-left: 5px solid transparent;\r\n        }\r\n\r\n        .result:hover {\r\n            border-color: var(--ai-taxonomist-accent-color);\r\n            z-index: 10;\r\n        }\r\n\r\n        .result:nth-child(1) {\r\n            animation-delay: 0.05s;\r\n        }\r\n        .result:nth-child(2) {\r\n            animation-delay: 0.1s;\r\n        }\r\n        .result:nth-child(3) {\r\n            animation-delay: 0.15s;\r\n        }\r\n        .result:nth-child(4) {\r\n            animation-delay: 0.2s;\r\n        }\r\n        .result:nth-child(5) {\r\n            animation-delay: 0.25s;\r\n        }\r\n        .result:nth-child(6) {\r\n            animation-delay: 0.3s;\r\n        }\r\n        .result:nth-child(7) {\r\n            animation-delay: 0.35s;\r\n        }\r\n        .result:nth-child(8) {\r\n            animation-delay: 0.4s;\r\n        }\r\n        .result:nth-child(9) {\r\n            animation-delay: 0.45s;\r\n        }\r\n\r\n        .col {\r\n            flex: 1 0 0;\r\n            max-width: 100%;\r\n            box-sizing: border-box;\r\n            flex-basis: 0;\r\n        }\r\n\r\n        .col-text {\r\n            padding-top: 1.6rem;\r\n        }\r\n\r\n        .score {\r\n            padding-right: 0.5rem;\r\n            padding-left: 0.2rem;\r\n            flex-basis: 16.66666667%;\r\n            max-width: 16.66666667%;\r\n            margin-top: 5px;\r\n        }\r\n\r\n        .score div {\r\n            border-radius: 30px;\r\n            border: 1.5px solid var(--ai-taxonomist-separator-border-color);\r\n            padding: 0.5rem;\r\n            text-align: center;\r\n            max-width: 4rem;\r\n        }\r\n\r\n        .species {\r\n            flex-basis: 25%;\r\n            max-width: 25%;\r\n            padding-right: 0.5rem;\r\n            padding-left: 0.5rem;\r\n        }\r\n        .species p {\r\n            margin: 0;\r\n        }\r\n\r\n        .speciesName {\r\n            color: var(--ai-taxonomist-accent-color);\r\n            font-style: italic;\r\n        }\r\n        .speciesName span {\r\n            font-style: normal;\r\n        }\r\n\r\n        .family {\r\n            flex-basis: 16.66666667%;\r\n            max-width: 16.66666667%;\r\n            padding-right: 0.5rem;\r\n            padding-left: 0.5rem;\r\n        }\r\n\r\n        .family span.familyName {\r\n            text-align: left;\r\n            font-style: italic;\r\n            background-color: var(--ai-taxonomist-separator-border-color);\r\n            border-radius: 4px;\r\n            padding: 0.2rem 0.35rem;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            display: block;\r\n        }\r\n\r\n        .gbif,\r\n        .url {\r\n            display: flex;\r\n            align-items: center;\r\n            width: 50px;\r\n            border-radius: 4px;\r\n            padding: 0 0.35rem;\r\n            margin-top: 4px;\r\n            background-color: var(--ai-taxonomist-separator-border-color);\r\n            gap: 2px;\r\n            transition: all 0.15s ease-in-out;\r\n            text-decoration: none;\r\n        }\r\n\r\n        .url {\r\n            width: 100%;\r\n        }\r\n\r\n        .url span {\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            color: var(--ai-taxonomist-accent-color);\r\n        }\r\n\r\n        .gbif:hover,\r\n        .url:hover {\r\n            filter: brightness(80%);\r\n        }\r\n\r\n        .gbif:hover {\r\n            filter: brightness(80%);\r\n        }\r\n\r\n        .imgContainer {\r\n            flex-basis: 41.66666667%;\r\n            max-width: 41.66666667%;\r\n            padding-left: 1.2rem;\r\n            display: inline-flex;\r\n            justify-content: flex-start;\r\n            gap: 6px;\r\n            margin-bottom: 6px;\r\n        }\r\n\r\n        .imgLink {\r\n            display: flex;\r\n            z-index: 9;\r\n            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n            transform-origin: center;\r\n            border-radius: 4px;\r\n            overflow: hidden;\r\n            height: 100px;\r\n            width: 100px;\r\n        }\r\n        .imgLink:hover {\r\n            cursor: pointer;\r\n            transform: scale(3);\r\n            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);\r\n            z-index: 10;\r\n        }\r\n\r\n        .imgContainer img {\r\n            object-position: center;\r\n            object-fit: cover;\r\n            aspect-ratio: 1;\r\n            background: var(--ai-taxonomist-background);\r\n            color: transparent;\r\n        }\r\n\r\n        @media only screen and (max-width: 48em) {\r\n            .col-text {\r\n                padding-top: 0;\r\n            }\r\n\r\n            .score {\r\n                flex-basis: 18%;\r\n                max-width: 18%;\r\n            }\r\n\r\n            .species {\r\n                flex-basis: 52%;\r\n                max-width: 52%;\r\n            }\r\n\r\n            .family {\r\n                flex-basis: 30%;\r\n                max-width: 30%;\r\n                text-align: end;\r\n            }\r\n            .family span {\r\n                display: inline-block;\r\n            }\r\n            .family .gbif {\r\n                margin-left: auto;\r\n            }\r\n\r\n            .imgContainer {\r\n                flex-basis: 100%;\r\n                max-width: 100%;\r\n                justify-content: flex-start;\r\n                margin-top: 12px;\r\n                margin-bottom: 24px;\r\n            }\r\n        }\r\n\r\n        @media only screen and (max-width: 38em) {\r\n            .score {\r\n                flex-basis: 25%;\r\n                max-width: 25%;\r\n            }\r\n\r\n            .species {\r\n                flex-basis: 75%;\r\n                max-width: 75%;\r\n            }\r\n            .family {\r\n                flex-basis: 100%;\r\n                max-width: 100%;\r\n                text-align: start;\r\n                margin-left: 25%;\r\n                margin-top: 12px;\r\n            }\r\n            .family .gbif {\r\n                margin-left: 0;\r\n            }\r\n        }\r\n\r\n        @keyframes fadeIn {\r\n            from {\r\n                opacity: 0;\r\n            }\r\n            to {\r\n                opacity: 1;\r\n            }\r\n        }\r\n\r\n        @keyframes animateIn {\r\n            from {\r\n                opacity: 0;\r\n                transform: translateY(-20px);\r\n            }\r\n            to {\r\n                opacity: 1;\r\n                transform: translateY(0);\r\n            }\r\n        }\r\n    `\r\n\r\n    @property({ attribute: false }) results: Results = {\r\n        results: [],\r\n    }\r\n\r\n    @property({ type: Boolean }) error: string | null = null\r\n\r\n    @property({ type: Boolean }) loading: boolean = false\r\n\r\n    @property({ type: Boolean }) plantnetBrand: boolean = false\r\n\r\n    onAttachmentClick(result: ResultType) {\r\n        return (e: Event) => {\r\n            e.preventDefault()\r\n            const detail = result\r\n            this.dispatchEvent(\r\n                new CustomEvent('aiTaxonomistAttachmentsClick', {\r\n                    detail,\r\n                    bubbles: true,\r\n                    composed: true,\r\n                    cancelable: true,\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const template: HTMLTemplateElement | null = <HTMLTemplateElement>(\r\n            document.getElementById('aitaxonomist-attachments-template')\r\n        )\r\n        const loading = this.loading ? html` <ai-loader></ai-loader>` : null\r\n        const error = this.error ? html`<p>${this.error}</p>` : null\r\n        const maxResults = 8\r\n        const hasExtraResults =\r\n            this.results.results.length > maxResults\r\n                ? html`<p>${this.results.results.length - maxResults} résultats supplémentaires non affichés</p>`\r\n                : null\r\n\r\n        return html`\r\n            <div class=\"container\">\r\n                <div class=\"separatorContainer\">\r\n                    <p class=\"title\"><span>Résultats</span></p>\r\n                    ${this.plantnetBrand ? html` <plantnet-brand></plantnet-brand>` : ''}\r\n                </div>\r\n                ${loading} ${error} ${this.results.overallScore ? html`<p><b>${this.results.overallScore}</b></p>` : ''}\r\n                <ul>\r\n                    ${this.results.results.slice(0, maxResults).map(\r\n                        result => html`\r\n                            <li class=\"result\">\r\n                                <div class=\"col col-text score\">\r\n                                    <div>${round(result.score * 100)}%</div>\r\n                                </div>\r\n                                <div class=\"col col-text species\">\r\n                                    ${result.taxonName\r\n                                        ? html`<p class=\"speciesName\">\r\n                                              ${!result.formatTaxonName\r\n                                                  ? html` <span>${result.taxonName}</span>`\r\n                                                  : result.taxonName}<span> ${result.author}</span>\r\n                                          </p>`\r\n                                        : ''}\r\n                                    <p>${result.commonNames[0]}</p>\r\n                                    ${result.additionalText ? html`<p>${result.additionalText}</p>` : ''}\r\n                                    ${template\r\n                                        ? html` <div\r\n                                              @click=${this.onAttachmentClick(result)}\r\n                                              @keyDown=${this.onAttachmentClick(result)}\r\n                                          >\r\n                                              ${template.content.cloneNode(true)}\r\n                                          </div>`\r\n                                        : ''}\r\n                                </div>\r\n                                <div class=\"col col-text family\">\r\n                                    ${result.family\r\n                                        ? html`<span title=\"${result.family}\" class=\"familyName\"\r\n                                              >${result.family}</span\r\n                                          >`\r\n                                        : ''}\r\n                                    ${result.gbifUrl\r\n                                        ? html`<a href=\"${result.gbifUrl}\" target=\"_blank\" class=\"gbif\"\r\n                                              >${GBIF_LOGO}\r\n                                              <svg\r\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                  width=\"24\"\r\n                                                  height=\"24\"\r\n                                                  viewBox=\"0 0 24 24\"\r\n                                              >\r\n                                                  <path\r\n                                                      d=\"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\"\r\n                                                  />\r\n                                              </svg>\r\n                                          </a>`\r\n                                        : null}\r\n                                    ${result.url\r\n                                        ? html`<a href=\"${result.url}\" target=\"_blank\" class=\"url\"\r\n                                              ><span>${getDomainName(result.url)}</span\r\n                                              ><svg\r\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                  width=\"24\"\r\n                                                  height=\"24\"\r\n                                                  viewBox=\"0 0 24 24\"\r\n                                              >\r\n                                                  <path\r\n                                                      d=\"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\"\r\n                                                  />\r\n                                              </svg>\r\n                                          </a>`\r\n                                        : null}\r\n                                </div>\r\n                                <div class=\"col imgContainer\">\r\n                                    ${result.images.map(\r\n                                        image => html`\r\n                                            <a href=\"${image.url}\" title=\"${image.alt}\" target=\"_blank\" class=\"imgLink\">\r\n                                                <img src=\"${image.url}\" alt=\"${image.alt}\"\r\n                                            /></a>\r\n                                        `\r\n                                    )}\r\n                                </div>\r\n                            </li>\r\n                        `\r\n                    )}\r\n                </ul>\r\n                ${hasExtraResults}\r\n            </div>\r\n        `\r\n    }\r\n}\r\n"]}